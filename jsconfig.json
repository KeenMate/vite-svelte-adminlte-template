{
	"compilerOptions": {
		// This is to allow usage of exports field in package json
//		"moduleResolution": "node",
//		"module": "ESNext",
//		"target": "ESNext",

		// from @tsconfig/svelte/tsconfig.json
		"module": "esnext",
		"moduleResolution": "bundler",
		"target": "es2017",

		/**
		 * svelte-preprocess cannot figure out whether you have
		 * a value or a type, so tell TypeScript to enforce using
		 * `import type` instead of `import` for Types.
		 */
		"isolatedModules": true,
		"resolveJsonModule": true,
		/**
		 * To have warnings / errors of the Svelte compiler at the
		 * correct position, enable source maps by default.
		 */
		"sourceMap": true,
		"esModuleInterop": true,
		"skipLibCheck": true,
		"forceConsistentCasingInFileNames": true,
		"baseUrl": ".",
		/**
		 * Typecheck JS in `.svelte` and `.js` files by default.
		 * Disable this if you'd like to use dynamic types.
		 */
		"checkJs": true,
		"paths": {
			"#/*": ["./node_modules/*"],
			"$lib/*": ["./src/lib/*"],
			"~assets/*": ["./src/assets/*"]
		},
		"allowImportingTsExtensions": true
	},
	/**
	 * Use global.d.ts instead of compilerOptions.types
	 * to avoid limiting type declarations.
	 */
	"include": ["src/**/*.d.ts", "src/**/*.js", "src/**/*.svelte", "*.js"]
}
